{"version":3,"sources":["utils/helper.js","components/task.js","components/task-list.js","App.js","utils/api.js","index.js"],"names":["sortFunc","task1","task2","isComplete","firstDate","date","secondDate","Date","getTime","getTaskPriority","task","isUrgent","Task","props","updateTask","className","type","name","id","checked","onChange","htmlFor","description","dueDate","TaskList","taskList","map","index","api","getTodoList","axios","method","url","headers","updateTodoList","taskId","status","config","data","getTaskUrgency","App","useState","setTaskList","theme","setTheme","updateTaskList","copyTaskList","indexOfTask","sort","apiPatchCall","a","console","log","findIndex","useEffect","normalizedTaskList","response","toLocaleDateString","getTaskList","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAYMA,EAAU,SAACC,EAAOC,GACpB,OAAGD,EAAME,WAAaD,EAAMC,aAAc,EACjCF,EAAME,WAAaD,EAAMC,YAblBC,EAgBIH,EAAMI,KAhBCC,EAgBKJ,EAAMG,KAfnCD,GAAaE,EACT,IAAIC,KAAKH,GAAWI,UAAY,IAAID,KAAKD,GAAYE,UAEpDJ,GAGI,EAFD,GALI,IAACA,EAAWE,GAoBzBG,EAAkB,SAACC,GACrB,OAAOA,EAAKP,WAAa,YAAcO,EAAKC,SAAW,SAAS,W,OCNpDC,EAdJ,SAACC,GAAU,IACZH,EAAoBG,EAApBH,KAAMI,EAAcD,EAAdC,WACb,OAAO,sBAAKC,UAAS,mBAAcN,EAAgBC,IAA5C,UACD,gCACE,uBAAOM,KAAK,WAAWC,KAAI,eAAUP,EAAKQ,IAAOC,QAAST,EAAKP,WAC3DiB,SAAU,WACNN,EAAWJ,EAAKQ,IAAKR,EAAKP,eAGlC,uBAAOkB,QAAO,eAAUX,EAAKQ,IAA7B,SAAoCR,EAAKY,iBAE5CZ,EAAKa,QAAU,qBAAKR,UAAU,WAAf,SAA2BL,EAAKa,UAAgB,OCJxDC,EAPA,SAACX,GAAU,IAChBY,EAAwBZ,EAAxBY,SAAUX,EAAcD,EAAdC,WACjB,OAAO,qBAAKC,UAAU,WAAf,SAEFU,EAAUA,EAASC,KAAI,SAAChB,EAAMiB,GAAP,OAAe,cAAC,EAAD,CAAkBjB,KAAQA,EAAMI,WAAYA,GAAjCa,MAAgD,M,gCCCpGC,EAAO,I,sCCHTC,YAAc,WAQV,OAAOC,IAPS,CACZC,OAAQ,MACRC,IAAK,iEACLC,QAAS,CACP,YAAa,wE,KAOvBC,eAAiB,SAACC,EAASC,GACvB,IAAMC,EAAS,CACXN,OAAQ,QACRC,IAAI,oEAAD,OAAsEG,GACzEF,QAAS,CACP,YAAa,oEACb,eAAgB,qBAElBK,KAAO,CAACnC,WAAaiC,IAGzB,OAAON,IAAMO,KDlBfE,EAAiB,SAAC7B,GACrB,OAAOA,EAAKP,eAAoBO,EAAKL,MAAOK,EAAKL,KAAKG,WAAY,IAAID,MAAOC,YAqEjEgC,MAlEf,WAAgB,IAAD,EAEmBC,mBAAS,MAF5B,mBAENhB,EAFM,KAEIiB,EAFJ,OAGcD,mBAAS,SAHvB,mBAGNE,EAHM,KAGEC,EAHF,KAKPC,EAAiB,SAACC,EAAaC,EAAa5C,GAChD,IAAMO,EAAOoC,EAAaC,GAC1BD,EAAaC,GAAa5C,WAAaA,EACvC2C,EAAaC,GAAapC,SAAY4B,EAAe7B,GACrDoC,EAAaE,MAAK,SAAC/C,EAAOC,GAAR,OAAgBF,EAASC,EAAOC,MAClDwC,EAAY,YAAII,KAGZG,EAAY,uCAAG,WAAOd,EAAShC,GAAhB,iBAAA+C,EAAA,+EAEXtB,EAAIM,eAAeC,GAFR,uDAKjBgB,QAAQC,IAAR,MACMN,EANW,YAMQrB,GACnBsB,EAAcD,EAAaO,WAAU,SAAA3C,GAAI,OAAEA,EAAKQ,KAAKiB,KAC5DU,EAAeC,EAAaC,GAAa5C,GARvB,yDAAH,wDA4ClB,OAxBAmD,qBAAU,YACS,uCAAG,gCAAAJ,EAAA,+EAEKtB,EAAIC,cAFT,gBAETS,EAFS,EAETA,MACDiB,EAAqBjB,EAAKZ,KAAI,SAAA8B,GAClC,IAAM9C,EAAO,GAOb,OANAA,EAAKQ,GAAKsC,EAAStC,GACnBR,EAAKY,YAAckC,EAASlC,YAC5BZ,EAAKa,QAAUiC,EAASjC,QAAS,IAAIhB,KAAKiD,EAASjC,SAASkC,qBAAqB,GACjF/C,EAAKL,KAAOmD,EAASjC,QAAS,IAAIhB,KAAKiD,EAASjC,SAAS,KACzDb,EAAKP,WAAaqD,EAASrD,WAC3BO,EAAKC,SAAW4B,EAAe7B,GACxBA,MAEUsC,MAAK,SAAC/C,EAAOC,GAAR,OAAgBF,EAASC,EAAOC,MACxDwC,EAAYa,GAdI,kDAiBhBJ,QAAQC,IAAR,MAjBgB,0DAAH,qDAoBjBM,KACC,IAGD,sBAAK3C,UAAS,wBAAmB4B,GAAjC,UACA,2CACA,wBAAQgB,QAAW,kBAAIf,GAAS,SAAAD,GAAK,MAAW,UAARA,EAAkB,OAAS,YAAnE,0BACA,cAAC,EAAD,CAAUlB,SAAWA,EAAUX,WApCf,SAACqB,EAAShC,GAC1B,IAAM2C,EAAY,YAAOrB,GACnBsB,EAAcD,EAAaO,WAAU,SAAA3C,GAAI,OAAEA,EAAKQ,KAAKiB,KAC3DU,EAAeC,EAAaC,EAAa5C,GACzC8C,EAAad,EAAShC,UErC1ByD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ce32c70f.chunk.js","sourcesContent":["\r\nconst sortByDate = (firstDate, secondDate)=>{\r\n    if(firstDate && secondDate)\r\n    return new Date(firstDate).getTime() - new Date(secondDate).getTime();\r\n    else{\r\n        if(!firstDate)\r\n        return 1;\r\n        else\r\n        return -1;\r\n    }\r\n}\r\n\r\nconst sortFunc =(task1, task2)=>{\r\n    if(task1.isComplete - task2.isComplete !==0){\r\n      return task1.isComplete - task2.isComplete;\r\n    }\r\n    else{\r\n      return sortByDate(task1.date, task2.date);\r\n    }\r\n  }\r\n\r\nconst getTaskPriority = (task) =>{\r\n    return task.isComplete ? 'completed' : task.isUrgent ? 'urgent':'pending';\r\n}  \r\nexport {sortFunc , getTaskPriority};","import {getTaskPriority} from '../utils/helper';\r\n\r\nconst Task =(props) =>{\r\n    const {task, updateTask} = props;\r\n    return <div className={`taskItem ${getTaskPriority(task)}`}>\r\n          <div>\r\n            <input type=\"checkbox\" name={`task ${task.id}`}  checked={task.isComplete}\r\n                onChange={()=>{\r\n                    updateTask(task.id, !task.isComplete);\r\n                }}\r\n            />\r\n            <label htmlFor={`task ${task.id}`}>{task.description}</label>\r\n        </div>\r\n        {task.dueDate ? <div className=\"date-due\">{task.dueDate}</div>: ''}\r\n        </div>\r\n}\r\nexport default  Task;","import Task from './task';\r\n\r\nconst TaskList =(props) =>{\r\n    const {taskList, updateTask} = props;\r\n    return <div className=\"taskList\">\r\n\r\n        {taskList? taskList.map((task, index)=><Task key={index} task = {task} updateTask={updateTask}/>):\"\"}\r\n        </div>\r\n}\r\nexport default  TaskList;","import TaskList from './components/task-list';\nimport './App.scss';\nimport { useEffect, useState } from 'react';\n\nimport {sortFunc} from './utils/helper';\nimport TodoApi from './utils/api'\n\nconst api =  new TodoApi();\n\nconst getTaskUrgency = (task) =>{\n   return task.isComplete? false : task.date? (task.date.getTime() < new Date().getTime()):false;\n}\n\nfunction App() {\n\n  const [taskList, setTaskList] = useState(null);\n  const [theme , setTheme] = useState('light');\n\n  const updateTaskList = (copyTaskList,indexOfTask, isComplete) =>{\n    const task = copyTaskList[indexOfTask];\n    copyTaskList[indexOfTask].isComplete = isComplete;\n    copyTaskList[indexOfTask].isUrgent  = getTaskUrgency(task);\n    copyTaskList.sort((task1, task2)=>sortFunc(task1, task2));\n    setTaskList([...copyTaskList]);\n  }\n\n  const apiPatchCall = async (taskId , isComplete) =>{\n    try{\n      await api.updateTodoList(taskId);\n    }\n    catch(e){\n      console.log(e);\n      const copyTaskList = [...taskList];\n      const indexOfTask = copyTaskList.findIndex(task=>task.id===taskId);\n     updateTaskList(copyTaskList,indexOfTask,!isComplete);\n    }\n  }\n\n  const updateTask =(taskId , isComplete)=>{\n    const copyTaskList = [...taskList];\n    const indexOfTask = copyTaskList.findIndex(task=>task.id===taskId);\n    updateTaskList(copyTaskList,indexOfTask, isComplete);\n    apiPatchCall(taskId , isComplete);\n  }\n\n\n  useEffect(()=>{\n    const getTaskList = async () =>{\n      try{\n        const {data} = await api.getTodoList();\n        const normalizedTaskList = data.map(response=>{\n          const task = {};\n          task.id = response.id;\n          task.description = response.description;\n          task.dueDate = response.dueDate? new Date(response.dueDate).toLocaleDateString():\"\";\n          task.date = response.dueDate? new Date(response.dueDate):null;\n          task.isComplete = response.isComplete;\n          task.isUrgent = getTaskUrgency(task);\n          return task;\n        });\n        normalizedTaskList.sort((task1, task2)=>sortFunc(task1, task2));\n        setTaskList(normalizedTaskList);\n      }\n      catch(e){\n        console.log(e);\n      }\n    }\n    getTaskList();\n  }, [])\n\n  return (\n    <div className={`container-App ${theme}`}>\n    <h1>Todo App </h1>\n    <button onClick = {()=>setTheme(theme=> theme==='light' ? 'dark' : 'light')}>Switch Theme</button>  \n    <TaskList taskList= {taskList} updateTask={updateTask} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\n\r\nclass TodoApi {\r\n    \r\n    getTodoList = ()=>{\r\n        const  config = {\r\n            method: 'get',\r\n            url: 'https://944ba3c5-94c3-4369-a9e6-a509d65912e2.mock.pstmn.io/get',\r\n            headers: { \r\n              'X-Api-Key': ' PMAK-5ef63db179d23c004de50751-10300736bc550d2a891dc4355aab8d7a5c' }\r\n          };\r\n        \r\n        return axios(config);  \r\n\r\n    } \r\n    \r\n    updateTodoList = (taskId , status)=>{\r\n        const config = {\r\n            method: 'patch',\r\n            url: `https://944ba3c5-94c3-4369-a9e6-a509d65912e2.mock.pstmn.io/patch/${taskId}`,\r\n            headers: { \r\n              'X-Api-Key': ' PMAK-5ef63db179d23c004de50751-10300736bc550d2a891dc4355aab8d7a5c', \r\n              'Content-Type': ' application/json' \r\n            },\r\n            data : {isComplete : status}\r\n          };\r\n        \r\n        return axios(config);  \r\n\r\n    } \r\n      \r\n}\r\n\r\nexport default TodoApi;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}